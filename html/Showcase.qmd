---
title: "Quantitative Metabarcoding"
format: 
  html:
    toc: true
    toc-location: left
    toc-title: "Table of Contents"
    toc-depth: 2
    number-sections: true
    page-layout: full
    self-contained: true 
    collapsible: true
    collapse-level: 1
    # code-summary: "Show/Hide Code"  # Toggle text for code folding
    # css: 'style_gg.css'
    grid:
      sidebar-width: 200px
      body-width: 880px
      margin-width: 200px
      gutter-width: 1.5rem
author: Gled Guri
date: "`r format(Sys.time(), '%d %B, %Y')`"
editor: visual
editor_options: 
  chunk_output_type: console
---

```{=html}
<style>
body {
  font-family: Arial, sans-serif;
  font-size: 18px;
}

h1 {
  font-size: 22px;  /* Adjust the size of H1 headers */
  font-weight: normal;  /* Make H1 headers not bold */
}

h2 {
  font-size: 18px;  /* Adjust the size of H2 headers */
  font-weight: normal;  /* Make H2 headers not bold */
}

h3 {
  font-size: 18px;  /* Adjust the size of H3 headers */
  font-weight: normal;  /* Make H3 headers not bold */
}

h4 {
  font-size: 18px;  /* Adjust the size of H4 headers */
  font-weight: normal;  /* Make H4 headers not bold */
}
</style>
```

```{r, include=FALSE}
dwidth <- 150
options(width = dwidth)
```

```{r, include=FALSE, warning=FALSE, message=FALSE}
options(width = 300) #wd
```

```{r, include=FALSE, warning=FALSE, message=FALSE}
options(width = dwidth)#wd
```


### Load the package and its dependencies

```{r, warning=FALSE, message=FALSE, results='hide'}
devtools::install_github("gledguri/QM",dependencies = TRUE, force = T );
library(QM)
load_QM_packages()
```

### Load the data

```{r}
data(qpcr);force(qpcr)
data(metabarcoding);force(metabarcoding)
```

<!-- ### Run Model 1 -->

<!-- ```{r} -->
<!-- M1 <- load_model('M1') -->

<!-- # Prepare the data for going into the model -->
<!-- stan_data_M1 <- prep_stan_M1( -->
<!-- 	qpcr_data = qpcr %>% filter(Sample_type=="STANDARD"), -->
<!-- 	Ct = "Ct", -->
<!-- 	standard_concentration = "Std_concentration", -->
<!-- 	plate_index = 'Plate') -->

<!-- # Run the model -->
<!-- M1_output <- Run_Model(stan_object = M1, stan_data = stan_data_M1) -->
<!-- ``` -->

<!-- ### Plot outputs of Model 1 -->

<!-- ```{r, fig.width=8, fig.height=5} -->
<!-- extract_qpcr_param(M1_output) %>% as.tibble() -->
<!-- plot_qpcr_prob_det(M1_output) -->
<!-- plot_qpcr_cont_mod(M1_output) -->
<!-- ``` -->

<!-- ```{r, fig.width=17, fig.height=6} -->
<!-- plot_qpcr_curves(M1_output) -->
<!-- ``` -->

<!-- ```{r, fig.width=15, fig.height=9} -->
<!-- plot_qpcr_cont_mod_plate_specific(M1_output) -->
<!-- ``` -->

### Run Model 2

```{r}
M2 <- load_model('M2')

# Prepare the data for going into the model
stan_data_M2 <- prep_stan_M2(
	qpcr_data = qpcr,
	sample_type = "Sample_type",
	Ct = "Ct",
	sample_name_column = "Sample_name",
	standard_concentration = "Std_concentration",
	plate_index = 'Plate')

# Run the model
M2_output <- Run_Model(stan_object = M2, stan_data = stan_data_M2)
```

### Plot outputs of Model 1

```{r, fig.width=17, fig.height=6}
extract_qpcr_param(M2_output) %>% as.tibble()
extract_est_conc(M2_output) %>% as.tibble()
plot_qpcr_curves(M2_output)
```

```{r, fig.width=8, fig.height=5, warning=FALSE, message=FALSE}
plot_qpcr_prob_det(M2_output)
plot_qpcr_cont_mod(M2_output)
```

```{r, fig.width=15, fig.height=9, warning=FALSE, message=FALSE}
plot_qpcr_cont_mod_plate_specific(M2_output)
```

```{r, fig.width=8, fig.height=5, warning=FALSE, message=FALSE}
plot_est_conc(M2_output)
```


